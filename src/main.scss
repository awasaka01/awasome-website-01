
// Imports
@use "helpers/_bundled.scss" as *;

html {
	// why the fuck is it copying my comment onto the next line when i save :sob:
	position: relative;
	min-height: 100%;
}
body { @extend %bodyDefaults; min-height: 100%; }


.unhideRandom {
	display: flex;
	flex-direction: row;
}



#corners {
	* {
		--gradient: #0000 40%, rgb(255 255 255 / 17.3%) 0 60%, #0000 0;
		position: absolute;
		bottom: 0;

		width:  10px; 
		height: 10px;
		margin: 10px;

		background: 
			linear-gradient(0deg, var(--gradient)),
			linear-gradient(90deg, var(--gradient));
	}
	*:nth-child(1) { top:    0; left:   0; }
	*:nth-child(2) { top:    0; right:  0; }
	*:nth-child(3) { bottom: 0; left:   0; }
	*:nth-child(4) { right:  0; bottom: 0; }
}


$text-color: $fg-1la;
$a: #ff5b81; $b: #ff4375; $c: #ff2558; $d: #ce3bd640; $e: #cd39c821;


// ANCHOR - Main Container (holds all the little screens)
#main-container-T {
	$width: 30px; 
	$depth: 3px;
	
	display: inline-flex;
	flex-direction: column;

	min-width: 0;
	max-width: min-content;
	margin: 60px 35px 200px;

	background-color: $bg-1l1;
	box-shadow: 
		f_98shadow_outer($depth, $width),
		50px 50px 100px 0 rgb(0 0 0 / 23.4%);

	> *:not(:first-child) { margin-top: $width + $depth*4; }
	> * {
		@include terminalStyle;
		padding: 10px;
		box-shadow:
			f_98shadow_inner($depth),
			inset 50px 50px 100px 0 rgb(0 0 0 / 34%);
	}
}


@mixin terminalStyle {
	// Striped Lines + Faint RGB Pixelated overlay effects
	position: relative;
	font-family: Terminal;
	text-shadow: 0 0 4px; // Glowing text
	background: radial-gradient(circle, #1a1825 0%, #070c12 100%);
	&::before {
		pointer-events: none;
		content: " ";

		position: absolute; z-index: 2;
		top: 0; bottom: 0; left: 0;

		display: block;

		background:
			linear-gradient(to bottom, #1210101c 50%, #00000025 50%),
			linear-gradient(to right, #ff00000f, #00ff0005, #0000ff0f),
			linear-gradient(to bottom, #0000 50%, #00000017 50%);
		background-size: 
			100% 2px,
 
			3px 100%,
 
			100% 16px;
	}
}



// Main menu for page selection
#pageList {
	@include terminalStyle;
	display: flex;	
	flex-direction: column;

	padding: 20px;

	font-size: 16px;
	color: rgba($text-color, 0.3);

	.title { color: $c; }


	// List of page links <p><a href="/">-> <u>Title</u> - Description</a></p>
	.links {
		display: flex;
		flex-direction: column;
		white-space: pre; // Disable the auto-collpase of spaces ' ' in the html (after the ->)

		a {
			cursor: pointer;

			display: flex;

			width: 100%;

			color: rgba($text-color, 0.5);

			outline: none;
			&:hover, &:focus-within, &:focus {
				background-color: $c;
				box-shadow: $c 0 0 10px;
				&, * { color: $bg-1; text-decoration-color: #0000; }
			}
		}
		u {
			color:                     $text-color;
			text-decoration-color:     rgba($text-color, 0.7);
			text-decoration-thickness: 1px;
			text-underline-offset:     2px;
		}
	}
	#logo-text {
		line-height: 1ch; // Required to make all characters square
		white-space: pre;
		.a { color: $a; } .b { color: $b; } .c { color: $c; } .d { color: $d; } .e { color: $e; }
	}
}



// 
#links {
	position: absolute;
	bottom: 0;

	display: flex;
	flex-direction: row;
	align-items: center;

	margin: 20px;

	font-family: "Roboto Mono";
	line-height: 1ch;

	* { display: flex; white-space: pre; }
	a:not(.no-underline) { text-decoration: underline; text-decoration-color: rgba($text-color, 0.3); }
	a:hover, a:focus-within { color: $a; text-decoration-color: #0000; }
	.divider {
		$color: #ffffff2f;
		width: 2px;
		height: 10px;
		margin: 0 10px;
		background: f_hardGradient($color #0000 $color #0000 $color, to bottom);
	}
}



#barcode {
	display: inline-flex;
	// The actual bars
	> div {
		display: inline-flex;
		flex-grow: 1;
		height: 15px;
		> div {
			display: inline-flex;

			width: 50%;
			margin-left: 50%;
		
			color: rgba($c, 0.7);

			background-color: currentcolor;
			box-shadow: 0 0 10px currentcolor;
		}
	}
}




#sorting {
	flex-direction: column;
	padding: 10px;
	color: rgba($text-color, 0.7);
	// box-shadow: f_98shadow_full(), inset 50px 50px 100px 0 rgb(0 0 0 / 34%), 50px 50px 100px 0 rgb(0 0 0 / 23.4%);box-shadowbox-shadow
	@include terminalStyle;
	&, * {
		display: flex;
		white-space: pre;
	}
	div {
		color: rgba($text-color, 0.2);
	}

	#sortingBars {
		align-items: end;
		font-size: 1px;
		* {
			content: "";

			flex-grow: 1;

			box-sizing: initial;
			padding-bottom: 10em;

			color: $c;

			background-color: $c;
			box-shadow: 0 0 10px currentcolor;
		}
	}
}























#main-container-P {
	// Generate a zigzag shape using a repeating conic gradient, to be used as a background or mask
	// note: set background/mask-size to [X% 100%] where X is the desired scale, or if left/right then [100% X%]
	@function f-zigzag-conic($side: "top", $background-color: #000000, $outer-color: transparent) {
		$offset: 0;

		@if $side=="bottom" {
			$offset: 0.5turn;
		} @else if $side=="top" {
			$offset: 0turn; 
		} @else if $side == "right" {
			$offset: 0.25turn;
		} @else if $side == "left" {
			$offset: 0.75turn;
		} @else {
			@error "Unknown side: #{$side}, must be 'top', 'bottom', 'right' or 'left'";
		}
		// misalign the center values by 1grad to have a very tiny gradient between the two colors, 
		// helping elimatinate anti-aliasing
		@return conic-gradient(
			from #{$offset}
			at #{$side},
			$outer-color 0grad 150grad,
			$background-color 151grad 249grad, 
			$outer-color 250grad 50grad,
		);
	}
	z-index: -1;

	width: 100%;
	height: 600px;
	padding: 10px;
	padding-top: 40px;
	border: none;

	color: black;

	background-color: rgb(154 84 96);

	mask: f-zigzag-conic("top");

	animation: scroll-mask 100s linear infinite;

	mask-position: 0% top;
	mask-size: 5% 100%;
	&::before {
		content: "";

		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;

		width: 100%;
		height: 100%;

		background-color: $c;
		filter: drop-shadow(0 0 8 0 $c);
	}
}
@keyframes scroll-mask {
	0% { mask-position: 0% top; }
	100% { mask-position: 100% top; }
}

















// saving code for later ðŸ˜­ (hoarder):
// saving code for later ðŸ˜­ (hoarder):
// saving code for later ðŸ˜­ (hoarder):
// saving code for later ðŸ˜­ (hoarder):


// #funbar {
// 	box-shadow: f_98shadow_full();box-shadowbox-shadow
// 	padding: 5px;paddingpadding
// 	display: inline-flex;displaydisplay
// 	color: red;colorcolor
// 	max-width: 100%;max-widthmax-width
// 	position: relative;positionposition
// 		height: 100px;heightheight
// 	background: radial-gradient(circle,#1a1825 0%, #070c12 100%);backgroundbackground
	

// 	// Base rules for effects
// 	&::after, &::before {
// 		content: " ";contentcontent
// 		display: block;displaydisplay
// 		position: absolute;positionposition
// 		top: 0;toptop left: 0;left bottom: 0;	right: 0; z-index: 2;
// 		pointer-events: none;pointer-eventspointer-events
// 	}
// 	// Striped Lines effect
// 	&:before {
// 		background: linear-gradient(to bottom, #0000 50%, #00000017 50%);backgroundbackground
// 		background-size: 100% 16px;background-sizebackground-size
// 	}


// 	// Faint RGB Pixelated effect
// 	&::after {
// 		background: linear-gradient(to bottom, #1210101c 50%, #00000025 50%), 
// 					linear-gradient(to right, #ff00000f, #00ff0005, #0000ff0f);backgroundbackground
// 		background-size: 100% 2px, 3px 100%;background-sizebackground-size
// 	}

// 	canvas {
// 	max-width: 100%;max-widthmax-width
// 		display: inline-flex;displaydisplay
// 		overflow: hidden;overflowoverflow
// 		image-rendering: pixelated;image-renderingimage-rendering image-rendering: crisp-edges;image-rendering

// 	}
// }
// 	// <div id="funbar" style="font-family: 'Times New Roman', Times, serif; line-height: 2cap;">	
// 	// 	<canvas width="10000" height="100"></canvas>
// 	// </div>
// 	const canvas = document.querySelector("#funbar canvas"); /** @type {HTMLElement} */
// 	const ctx = canvas.getContext("2d"); /** @type {CanvasRenderingContext2D} */

// 	var rect = canvas.parentNode.getBoundingClientRect();
// 	canvas.width = rect.width;
// 	canvas.height = rect.height;
// // 	ctx.font = "30px Arial";
// // 	ctx.fillText("Hello World", -10, 50);

// ctx.fillStyle = "#ff2558";
// ctx.shadowBlur = 10;
// ctx.shadowColor = "#ff2558";
// // ctx.fillRect(0, 50, 100, 100);

// setInterval(() => {

// 	ctx.globalCompositeOperation = "copy";
// 	ctx.drawImage(ctx.canvas, 10, 0);
// 	// reset back to normal for subsequent operations.
// 	ctx.globalCompositeOperation = "source-over";

// 	ctx.fillRect(10, 0, 10, randomInteger(0, 100));
// }, 200);



/*
b {
	font-size: 100%;
}
span {
	outline: 1px solid rgba(255, 255, 255, 0.005);
}

@keyframes fadeIn {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

span {
	animation: fadeIn;
	animation-timing-function: step-end;
}

.blink::after {
	content: "|";
	animation: blink 1s step-end infinite;
}
@keyframes blink {
	50% {
		opacity: 0;
	}
}
body {
	font-family: win98;
	background-color: #1e1c1f;
	color: rgb(194, 194, 194);
	display: flex;
	align-items: center;
	flex-direction: column;
	padding: 40px;

	font-size: 10px;
}
canvas {
	display: none;
	image-rendering: pixelated;
	width: 100%;
}
#output {
	white-space: pre;
	line-height: 1ch;
}
#main-title {
	.-header {
		width: 100%;
		background-color: gray;
		display: flex;
		justify-content: right;
	}
	.-text {
		font-size: 0.5rem;

		white-space: pre;
		line-height: 1ch;
		font-family: "Terminal";

		.a {
			color: #ff305d;
		}
		.b {
			color: #d6103b;
		}
		.c {
			color: #fa1a4b;
		}
		.d {
			color: #b228b940;
		}
		.e {
			color: #b725b221;
		}
		padding: 0px;
		margin-top: 2ch;
		margin-left: 2ch;
	}

	display: flex;
	flex-direction: column;
	align-items: center;
	height: max-content;
	background-color: #00000042;
	border: 2px solid rgb(84, 84, 84);
	margin-top: 40px;
}

// Page List
// #page-list {
// 	display: flex;
// 	flex-wrap: wrap;
// 	gap: 2em;

// 	font-size: smaller;
// 	padding: 4em;
// 	width: 100%;
// 	// max-width: 1000px;
// 	box-sizing: border-box;

// 	.page {
// 		position: relative;
// 		font-family: "Roboto Mono", monospace;
// 		cursor: pointer;

// 		flex-grow: 1;
// 		display: flex;
// 		flex-direction: column;
// 		box-shadow: 0 0 40px 10px $bg-1;

// 		&::after, &::before, & a {
// 			transition: ease-in-out 120ms;
// 			transition-property: height margin-top background-color;
// 		}

// 		&::after, a {
// 			outline: 4px solid $hi-1d8;
// 		}

// 		a {

// 			padding: {
// 				left: 1.3em;
// 				right: 1.3em;
// 				top: 0.8em;
// 				bottom: 15px;
// 			}

// 			box-shadow: 0 0 10px 0 #000000eb;
// 			background-color: $hi-1;

// 			&:hover {

// 				background-color: $hi-1dd;
// 			}
// 			&::before {
// 				transition: top 120ms ease-in-out;

// 				position: absolute;
// 				top: 0;
// 				left: 0;
// 				width: 100%;
// 				height: calc(100% - 15px);

// 				outline: transparent dashed 3px;
// 				outline-offset: -0.5em;
// 				content: "";
// 				white-space: pre;
// 			}

// 		}

// 		&::after {
// 			content: "";
// 			height: 15px;
// 			z-index: -1;
// 			background: stripes($hi-1d8, $hi-1da, 0.5em);

// 		}

// 		&::before {
// 			content: "";
// 			height: 0;
// 		}

// 		&:hover {
// 			//transform: translateY(15px);
// 			&::after { margin-top: -15px; }
// 			&::before { height: 15px;}
// 			a::before {
// 				top: 15px;
// 				outline-color: rgba($fg-1, 0.2);
// 			}
// 			color: $fg-1d2;

// 			text-decoration-color: rgba($fg-1d2, 0.5);
// 			// outline: rgba($fg-3l5, 0.3) 0.2em dashed;
// 			// transition: all 60ms ease-in-out;
// 		}

// 		// Zoom in border when clicked
// 		// outline-offset: -0.8em;
// 		// transition: all 300ms linear, outline 100ms linear, outline-offset 1000ms linear;

// 		// &:active a::before, &:focus-within a::before {
// 		// 	transition: outline-offset 1200ms ease-in, outline-width 7000ms ease-in, outline-color 350ms ease-in, border-radius 1200ms ease-in;
// 		// 	outline-offset: 200vmax;
// 		// 	outline-width: 1000px;
// 		// 	outline-color: $fg-1;
// 		// 	border-radius: 100%;
// 		// 	cursor: progress;
// 		// }

// 		color: $fg-1;
// 		text-decoration-color: rgba($fg-1, 0.5);
// 		.title {
// 			font-size: 2em;
// 			font-weight: bold;

// 			text-decoration-line: underline;
// 			text-decoration-thickness: 0.15px;
// 			text-decoration-skip-ink: unset;
// 			text-decoration-color: inherit;
// 		}

// 		.desc {
// 			font-weight: 300;
// 		}
// 	}

// }

// Header
// .title-bar {
// 	width: 100%;
// 	padding: 6px;
// 	box-sizing: border-box;

// 	div {
// 		@extend %flex-center;
// 		@include

// 		font-size: x-large;
// 		font-family: win98;

// 		box-sizing: border-box;
// 		padding: 15px;
// 		width: 100%;
// 		height: 2em;

// 		background: linear-gradient(90deg, rgba(119, 80, 159, 1) 0%, rgba(205, 106, 199, 1) 40%, rgba(243, 213, 180, 1) 100%);
// 	}

// 	p {
// 		margin-right: auto;
// 		margin-left: 15px;
// 	}

// 	.title-bar-button {
// 		@extend %flex-center;
// 		@include raisedEffect();

// 		background-color: $bg-1;
// 		border: 1.5px solid #0000000d;

// 		height: 100%;
// 		aspect-ratio: 1 / 1;
// 		margin-left: 4px;

// 		font-size: 0.5em;
// 		transition: all 100ms;

// 		&:hover { background-color: $bg-1l1; }

// 		&:active,
// 		&.active {
// 			@include raisedEffect();

// 			font-size: 0.5em;
// 			background-color: $bg-1l2;

// 			min-height: 100%;
// 			aspect-ratio: 1 / 1;

// 			position: relative;
// 			transform: translate(0.15px, 0.15px);
// 			transition: all 5ms;

// 			&:hover { background-color: $bg-1l3; }
// 		}

// 		&::after {
// 			@extend %flex-center;

// 			mask-size: 90%;
// 			mask-position: center;
// 			mask-repeat: no-repeat;
// 			content: "";

// 			background-color: $fg-1;
// 			image-rendering: optimizeSpeed;

// 			width: 70%;
// 			height: 70%;

// 		}
// 		&:active::after,
// 		&.active::after {
// 			background-color: $fg-1l2;
// 		}
// 	}
// }

/* #region Pages */
// #page-list {
// 	width: 100%;widthwidth
// 	box-sizing: border-box;box-sizingbox-sizing
// 	padding: 40px;paddingpadding
// 	align-self: center;align-selfalign-self
// 	display: flex;displaydisplay
// 	flex-wrap: wrap;flex-wrapflex-wrap

// 	font-size: 1.15px;font-sizefont-size
// 	flex-direction: row;flex-directionflex-direction

// 	align-items: stretch;align-itemsalign-items
// }

// .page-link {
// 	flex: 1;flexflex
// 	outline: none !important;outlineoutline
// }

// .page {
// 	color: var($fontcolor1);colorcolor
// 	justify-content: center;justify-contentjustify-content
// 	padding: 10px 15px;paddingpadding
// 	margin: 3px;marginmargin
// 	white-space: nowrap;white-spacewhite-space
// 	background-color: $bg3;background-colorbackground-color
// 	border: 4px solid $bg2;borderborder
// 	transition: border-color 100ms ease-out;transitiontransition
// 	cursor: pointer;cursorcursor
// 	flex-direction: column;flex-directionflex-direction
// 	align-items: center;align-itemsalign-items

// 	display: flex;displaydisplay

// 	box-shadow:
// 		inset 0px 8px 0px 0px red,
// 		inset 0px 2px 0px 0px rgba(0, 0, 0, 1),
// 		inset 0px 2px 0px 0px rgba(0, 0, 0, 1),
// 		inset 0px 2px 0px 0px rgba(0, 0, 0, 1);box-shadowbox-shadow
// }

// .page:hover,
// .page-link:focus-within > .page {
// 	transition: border-color 10ms ease-out;transitiontransition
// 	border-color: var($hicolor);border-colorborder-color
// 	background-color: $bg4;background-colorbackground-color
// }

// .page-title {
// 	font-weight: 500;font-weightfont-weight
// 	font-size: 1.2em;font-sizefont-size
// }

// .page-link {
// 	text-decoration: none;text-decorationtext-decoration
// }

// .page-desc {
// 	color: var($fontcolor2);colorcolor
// }

// /* #endregion */

// #heartcontainer {
// 	font-size: 1.5vmin;font-sizefont-size
// 	top: 0;toptop
// 	left: 0;leftleft
// 	width: 100%;widthwidth
// 	height: 100vh;heightheight
// 	position: fixed;positionposition
// 	z-index: 1;z-indexz-index
// 	pointer-events: none;pointer-eventspointer-events
// }

/* #region Falling Hearts */
/* .heart {
	position: fixed;
	font-size: calc(1vw * 1vh);
	width: 4em;
	height: 4em;
	position: fixed;
	/* top: -2em; /
	pointer-events: none;
	display: flex;
	align-items: center;
	z-index: 1;
	justify-content: center;
}
svg {
	padding-left: 1px;
	padding-right: 1px;
	padding-top: 1px;
	padding-bottom: 1px;
}

.heart,
.heart * {
	position: fixed;
	font-size: inherit;
	width: 11em;
	height: 11em;
}

.heart {
	top: -10em;
	left: 0;
	transition: all 100ms linear;
}
.heart * {
	width: 100%;
	display: block;
	height: 100%;
}
.heartpath {
	width: 100%;
	height: 100%;
} */

@keyframes Fall {
	0% {
		top: -15px;
	}

	100% {
		top: 100vh;
	}
}

/* #heartcontainer {
	content: " ";
	top: 0;
	left: 0;
	width: 100%;
	height: 100vh;
	position: fixed;
	z-index: 1;
	pointer-events: none;
} */
/* #endregion */
